from enum import IntEnum
import globals

class PieceType(IntEnum):
    O = 1
    S = 2
    T = 3
    J = 4
    L = 5
    Z = 6
    I = 7

# Sprite sheet indexing offsets
PIECE_COLOR_OFFSETS = {
    PieceType.O: 0,
    PieceType.S: globals.TETRIS_BIT_24_WIDTH,
    PieceType.T: globals.TETRIS_BIT_24_WIDTH * 2,
    PieceType.J: globals.TETRIS_BIT_24_WIDTH * 3,
    PieceType.L: globals.TETRIS_BIT_24_WIDTH * 4,
    PieceType.Z: globals.TETRIS_BIT_24_WIDTH * 5,
    PieceType.I: globals.TETRIS_BIT_24_WIDTH * 6,
}

PIECE_SHAPES = {
    PieceType.O: [
        [
            [0, 0, 0, 0],
            [0, 1, 1, 0],
            [0, 1, 1, 0],
            [0, 0, 0, 0]
        ]
    ] * 4,  # O piece is the same in all rotations

    PieceType.S: [
        [
            [0, 2, 2, 0],
            [2, 2, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 2, 0, 0],
            [0, 2, 2, 0],
            [0, 0, 2, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 0, 0, 0],
            [0, 2, 2, 0],
            [2, 2, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [2, 0, 0, 0],
            [2, 2, 0, 0],
            [0, 2, 0, 0],
            [0, 0, 0, 0],
        ],
    ],
    PieceType.T: [
        [
            [0, 3, 0, 0],
            [3, 3, 3, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 3, 0, 0],
            [0, 3, 3, 0],
            [0, 3, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 0, 0, 0],
            [3, 3, 3, 0],
            [0, 3, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 3, 0, 0],
            [3, 3, 0, 0],
            [0, 3, 0, 0],
            [0, 0, 0, 0],
        ],
    ],
    PieceType.J: [
        [
            [4, 0, 0, 0],
            [4, 4, 4, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 4, 4, 0],
            [0, 4, 0, 0],
            [0, 4, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 0, 0, 0],
            [4, 4, 4, 0],
            [0, 0, 4, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 4, 0, 0],
            [0, 4, 0, 0],
            [4, 4, 0, 0],
            [0, 0, 0, 0],
        ],
    ],
    PieceType.L: [
        [
            [0, 0, 5, 0],
            [5, 5, 5, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 5, 0, 0],
            [0, 5, 0, 0],
            [0, 5, 5, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 0, 0, 0],
            [5, 5, 5, 0],
            [5, 0, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [5, 5, 0, 0],
            [0, 5, 0, 0],
            [0, 5, 0, 0],
            [0, 0, 0, 0],
        ],
    ],
    PieceType.Z: [
        [
            [6, 6, 0, 0],
            [0, 6, 6, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 0, 6, 0],
            [0, 6, 6, 0],
            [0, 6, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 0, 0, 0],
            [6, 6, 0, 0],
            [0, 6, 6, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 6, 0, 0],
            [6, 6, 0, 0],
            [6, 0, 0, 0],
            [0, 0, 0, 0],
        ],
    ],
    PieceType.I: [
        [
            [0, 0, 0, 0],
            [7, 7, 7, 7],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
        ],
        [
            [0, 0, 7, 0],
            [0, 0, 7, 0],
            [0, 0, 7, 0],
            [0, 0, 7, 0],
        ],
        [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [7, 7, 7, 7],
            [0, 0, 0, 0],
        ],
        [
            [0, 7, 0, 0],
            [0, 7, 0, 0],
            [0, 7, 0, 0],
            [0, 7, 0, 0],
        ],
    ],
}

WALL_KICKS = {
    PieceType.J: {
        (0, 1): [(0, 0), (-1, 0), (-1, 1), (0, -2), (-1, -2)],
        (1, 0): [(0, 0), (1, 0), (1, -1), (0, 2), (1, 2)],
        (1, 2): [(0, 0), (1, 0), (1, -1), (0, 2), (1, 2)],
        (2, 1): [(0, 0), (-1, 0), (-1, 1), (0, -2), (-1, -2)],
        (2, 3): [(0, 0), (1, 0), (1, 1), (0, -2), (1, -2)],
        (3, 2): [(0, 0), (-1, 0), (-1, -1), (0, 2), (-1, 2)],
        (3, 0): [(0, 0), (-1, 0), (-1, -1), (0, 2), (-1, 2)],
        (0, 3): [(0, 0), (1, 0), (1, 1), (0, -2), (1, -2)],
    }
}

# S, Z, T, L share the same as J, so you can loop and assign:
for piece in [PieceType.L, PieceType.T, PieceType.S, PieceType.Z]:
    WALL_KICKS[piece] = WALL_KICKS[PieceType.J]

WALL_KICKS[PieceType.I] = {
    (0, 1): [(0, 0), (-2, 0), (1, 0), (-2, -1), (1, 2)],
    (1, 0): [(0, 0), (2, 0), (-1, 0), (2, 1), (-1, -2)],
    (1, 2): [(0, 0), (-1, 0), (2, 0), (-1, 2), (2, -1)],
    (2, 1): [(0, 0), (1, 0), (-2, 0), (1, -2), (-2, 1)],
    (2, 3): [(0, 0), (2, 0), (-1, 0), (2, 1), (-1, -2)],
    (3, 2): [(0, 0), (-2, 0), (1, 0), (-2, -1), (1, 2)],
    (3, 0): [(0, 0), (1, 0), (-2, 0), (1, -2), (-2, 1)],
    (0, 3): [(0, 0), (-1, 0), (2, 0), (-1, 2), (2, -1)],
}

WALL_KICKS[PieceType.O] = {
    (0, 1): [(0, 0)],
    (1, 0): [(0, 0)],
    (1, 2): [(0, 0)],
    (2, 1): [(0, 0)],
    (2, 3): [(0, 0)],
    (3, 2): [(0, 0)],
    (3, 0): [(0, 0)],
    (0, 3): [(0, 0)],
}